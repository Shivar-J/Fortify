#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_scalar_block_layout : enable

layout(set = 0, binding = 0) uniform accelerationStructureEXT topLevelAS;
layout(set = 0, binding = 1, rgba32f) uniform image2D outputImage;
layout(set = 0, binding = 3, std140) uniform RaytracingUBO {
    mat4 view;
    mat4 proj;
    uint vertexSize;
    uint sampleCount;
    uint samplesPerFrame;
    uint rayBounces;
} ubo;

layout(location = 0) rayPayloadEXT vec3 payload;

void main() {
    ivec2 pixel = ivec2(gl_LaunchIDEXT.xy);
    vec2 resolution = vec2(imageSize(outputImage));
    vec2 uv = (vec2(pixel) + 0.5) / resolution;
    vec2 ndc = uv * 2.0 - 1.0;

    mat4 invProj = inverse(ubo.proj);
    mat4 invView = inverse(ubo.view);
    vec3 rayOrigin = vec3(invView[3]);
    
    vec4 rayClip = vec4(ndc, -1.0, 1.0);
    vec4 rayView = invProj * rayClip;
    rayView = vec4(rayView.xy, -1.0, 0.0);
    vec3 rayDirection = normalize((invView * rayView).xyz);

    traceRayEXT(
        topLevelAS,
        gl_RayFlagsOpaqueEXT,
        0xFF,
        0, 0, 0,
        rayOrigin,
        0.001,
        rayDirection,
        10000.0,
        0
    );

    imageStore(outputImage, pixel, vec4(payload, 1.0));
}